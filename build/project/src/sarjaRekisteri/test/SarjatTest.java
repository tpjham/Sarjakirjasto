package sarjaRekisteri.test;
// Generated by ComTest BEGIN
import sarjaRekisteri.SailoException;
import java.util.Iterator;
import java.io.File;
import static org.junit.Assert.*;
import org.junit.*;
import sarjaRekisteri.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2020.04.24 15:48:09 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class SarjatTest {



  // Generated by ComTest BEGIN
  /** testLisaa32 */
  @Test
  public void testLisaa32() {    // Sarjat: 32
    Sarjat sarjat = new Sarjat(); 
    Sarja s1 = new Sarja(), s2 = new Sarja(); 
    assertEquals("From: Sarjat line: 36", 0, sarjat.getLkm()); 
    sarjat.lisaa(s1); assertEquals("From: Sarjat line: 37", 1, sarjat.getLkm()); 
    sarjat.lisaa(s2); assertEquals("From: Sarjat line: 38", 2, sarjat.getLkm()); 
    sarjat.lisaa(s1); assertEquals("From: Sarjat line: 39", 3, sarjat.getLkm()); 
    assertEquals("From: Sarjat line: 40", s1, sarjat.anna(0)); 
    assertEquals("From: Sarjat line: 41", s2, sarjat.anna(1)); 
    assertEquals("From: Sarjat line: 42", s1, sarjat.anna(2)); 
    assertEquals("From: Sarjat line: 43", false, sarjat.anna(1) == s1); 
    assertEquals("From: Sarjat line: 44", true, sarjat.anna(1) == s2); 
    sarjat.lisaa(s1); assertEquals("From: Sarjat line: 45", 4, sarjat.getLkm()); 
    sarjat.lisaa(s1); assertEquals("From: Sarjat line: 46", 5, sarjat.getLkm()); 
    assertEquals("From: Sarjat line: 47", 5, sarjat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa62 
   * @throws SailoException when error
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa62() throws SailoException,CloneNotSupportedException {    // Sarjat: 62
    Sarjat sarjat = new Sarjat(); 
    Sarja s1 = new Sarja(); Sarja s2 = new Sarja(); 
    s1.rekisteroi(); s2.rekisteroi(); 
    assertEquals("From: Sarjat line: 68", 0, sarjat.getLkm()); 
    sarjat.korvaaTaiLisaa(s1); assertEquals("From: Sarjat line: 69", 1, sarjat.getLkm()); 
    sarjat.korvaaTaiLisaa(s2); assertEquals("From: Sarjat line: 70", 2, sarjat.getLkm()); 
    Sarja s3 = s1.clone(); 
    s1.setNimi("kkk"); 
    Iterator<Sarja> it = sarjat.iterator(); 
    assertEquals("From: Sarjat line: 74", true, it.next() == s1); 
    sarjat.korvaaTaiLisaa(s3); assertEquals("From: Sarjat line: 75", 2, sarjat.getLkm()); 
    it = sarjat.iterator(); 
    Sarja s0 = it.next(); 
    assertEquals("From: Sarjat line: 78", s3, s0); 
    assertEquals("From: Sarjat line: 79", true, s0 == s3); 
    assertEquals("From: Sarjat line: 80", false, s0 == s1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testPoista119 
   * @throws SailoException when error
   */
  @Test
  public void testPoista119() throws SailoException {    // Sarjat: 119
    Sarjat sarjat = new Sarjat(); 
    Sarja s1 = new Sarja(); Sarja s2 = new Sarja(); Sarja s3 = new Sarja(); 
    s1.rekisteroi(); s2.rekisteroi(); s3.rekisteroi(); 
    int id1 = s1.getId(); 
    sarjat.lisaa(s1); sarjat.lisaa(s2); sarjat.lisaa(s3); 
    assertEquals("From: Sarjat line: 126", 1, sarjat.poista(id1+1)); 
    assertEquals("From: Sarjat line: 127", null, sarjat.annaId(id1+1)); assertEquals("From: Sarjat line: 127", 2, sarjat.getLkm()); 
    assertEquals("From: Sarjat line: 128", 1, sarjat.poista(id1)); assertEquals("From: Sarjat line: 128", 1, sarjat.getLkm()); 
    assertEquals("From: Sarjat line: 129", 0, sarjat.poista(id1+3)); sarjat.getLkm(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta147 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta147() throws SailoException {    // Sarjat: 147
    Sarjat sarjat = new Sarjat(); 
    Sarja s1 = new Sarja(); Sarja s2 = new Sarja(); 
    s1.vastaaSarja(); s2.vastaaSarja(); 
    String hakemisto = "testisarja"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    sarjat.lueTiedostosta(tiedNimi); 
    fail("Sarjat: 160 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    sarjat.lisaa(s1); 
    sarjat.lisaa(s2); 
    sarjat.tallenna(); 
    assertEquals("From: Sarjat line: 164", true, ftied.delete()); 
    assertEquals("From: Sarjat line: 165", true, dir.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testAnnaId319 
   * @throws SailoException when error
   */
  @Test
  public void testAnnaId319() throws SailoException {    // Sarjat: 319
    Sarjat sarjat = new Sarjat(); 
    Sarja s1 = new Sarja(); Sarja s2 = new Sarja(); Sarja s3 = new Sarja(); 
    s1.rekisteroi(); s2.rekisteroi(); s3.rekisteroi(); 
    int id1 = s1.getId(); 
    sarjat.lisaa(s1); sarjat.lisaa(s2); sarjat.lisaa(s3); 
    assertEquals("From: Sarjat line: 326", true, sarjat.annaId(id1) == s1); 
    assertEquals("From: Sarjat line: 327", true, sarjat.annaId(id1+1) == s2); 
    assertEquals("From: Sarjat line: 328", true, sarjat.annaId(id1+2) == s3); 
  } // Generated by ComTest END
}